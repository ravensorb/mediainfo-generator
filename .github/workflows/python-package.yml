# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  code-quality:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
        poetry-version: [ '1.4.1' ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
        # see details (matrix, python-version, python-version-file, etc.)
        # https://github.com/actions/setup-python

      - name: Install poetry
        uses: abatilo/actions-poetry@v2

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        uses: benjavicente/setup-poetry@main
        with: # default arguments
          poetry-version: 1.4.1
          cache-installation: true
          cache-dependencies: true
          install-dependencies: true

      - name: Run black
        run: poetry run black . --check

      - name: Run isort
        run: poetry run isort . --check-only

      - name: Run bandit
        run: poetry run bandit .

      - name: Run saftey
        run: poetry run safety check

  publish:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10' ]
        poetry-version: [ '1.4.1' ]
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
